---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: DockerMachineTemplate
metadata:
  name: prod-cluster-control-plane
spec:
  template:
    spec:
      customImage: kindest/node:v1.32.2
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: prod-cluster-md-0
spec:
  clusterName: prod-cluster
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/deployment-name: prod-cluster-md-0
  template:
    metadata:
      labels:
        cluster.x-k8s.io/deployment-name: prod-cluster-md-0
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: prod-cluster-md-0
      clusterName: prod-cluster
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: DockerMachineTemplate
        name: prod-cluster-md-0
      version: v1.32.2
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: prod-cluster-md-0
spec:
  template:
    spec:
      files:
        - path: /etc/kubernetes/pki/ca.crt
          owner: root:root
          permissions: "0640"
          contentFrom:
            secret:
              name: prod-cluster-ca
              key: ca.crt
      preKubeadmCommands:
        - |
          bash -c '
            echo "[INFO] Running custom kubeadm join..."
            kubeadm join --config /run/kubeadm/kubeadm-join-config.yaml --ignore-preflight-errors=FileAvailable--etc-kubernetes-pki-ca.crt
            if [ $? -eq 0 ]; then
              echo "[INFO] kubeadm join successful, marking bootstrap as complete"
              mkdir -p /run/cluster-api
              touch /run/cluster-api/bootstrap-success.complete
            else
              echo "[ERROR] kubeadm join failed"
              exit 1
            fi
          '

---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: DockerMachineTemplate
metadata:
  name: prod-cluster-md-0
spec:
  template:
    spec: {}
